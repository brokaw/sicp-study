#Prisoner's dilemma

Relevant sections in text: 1.3, 2.2.1

This assignment presents a simple game-playing program, in which strategies are represented as higher-order procedures. The Game of Twenty-One assignment takes a similar approach. The prisoner's dilemma game also uses some simple list-manipulation commands. There is an opportunity here to run prisoner's dilemma tournament for the class.
We are grateful to Franklyn Turbak, Mike Eisenberg, and Mitch Resnick for developing this assignment.

Files for download:

ps4prs.tex  TeX source for the assignment.
ps4prs.scm  Scheme source code required for this assignment.
ps4prs.ps   Postscript file for printing the assignment

#Picture language


Relevant section in text: 2.2.4

This is the original material on the square-limit language, which was revised to form section 2.2.4 of the book. For explanations of how the language works, you should use the book rather than the assignment text given here. We have not included a postscript file here, because the explanation (and the figures) in the book are better.
The code below includes an implementation of primitive painters for line-drawings and two-dimensional images. This code is specific to MIT Scheme. It includes a constructor that creates primitive painters from pgm files.

Files for download:

ps4hnd.tex  TeX source for the assignment.
hend.scm 
hutils.scm 
psgo.scm    Scheme source code required for this assignment.
prmpnt.scm  Scheme source code implementing constructors for primitive painters (highly MIT Scheme specific). You should compile this file to obtain adequate performance.
einstein.pgm
fovnder.pgm Sample pgm files that can be used to create painters.

#Term-rewriting evaluator


Relevant sections in text: 1.1, 2.3

This is an extensive assignment, which develops an alternative view of evaluation to the one presented in chapters 3 and 4 of the text. This view extends the informal substitution model of section 1.1 to a full term-rewriting model for evaluating Scheme expressions. Working through this assignment provides experience with the formal view of language syntax and semantics, as well as considerable exercise with symbolic manipulation.
In order to do the assignment, students will need to read the supplementary handout (provided below), which describes term rewriting and the evaluation model.

We are grateful to Prof. Albert Meyer of MIT for developing this assignment and the underlying model.

Files for download:

ps4.tex TeX source for the assignment.
ps4.ps  Postscript file for printing the assignment
trnotes.tex TeX source for the supplementary handout.
trnotes.ps  Postscript file for printing the supplementary handout.
smeval.scm 
smfresh.scm 
smscope.scm 
smstep.scm 
smsyntax.scm 
temp.scm 
tests.scm   Scheme source code required for this assignment.

